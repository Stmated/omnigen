/**
 * Generated by Omnigen @ 2000-01-02T03:04:05.000Z
 */
export interface AbstractRequestData {
  readonly Password: string;
  readonly Username: string;
}

export interface AbstractResponseResult<TData, TMethod extends string> {
  readonly data: TData;
  readonly method: TMethod;
  readonly signature: string;
  readonly uuid: string;
}

export type DepositRequest = JsonRpcRequest<DepositRequestParams, 'Deposit'>;
export interface DepositRequestData extends AbstractRequestData {
  readonly NotificationURL: string;
  readonly [key: string]: any;
}

export type DepositRequestParams = JsonRpcRequestParams<DepositRequestData>;
export type DepositResponse = JsonRpcResponse<DepositResponseResult>;
export interface DepositResponseData {
  readonly orderid?: string | undefined;
  readonly url?: string | undefined;
}

export type DepositResponseResult = AbstractResponseResult<DepositResponseData, 'Deposit'>;
export type ErrorUnknown = JsonRpcErrorResponse;
export type ErrorUnknownError = JsonRpcError;
export interface JsonRpcError {
  readonly code?: number | undefined;
  readonly data?: any | undefined;
  readonly message?: string | undefined;
}

export interface JsonRpcErrorResponse {
  readonly error: ErrorUnknownError;
  readonly id?: string | undefined;
  readonly jsonrpc?: '2.0' | undefined;
  readonly result?: undefined;
}

export interface JsonRpcRequest<TParams extends JsonRpcRequestParams<AbstractRequestData>, TMethod extends string> {
  readonly id: string;
  readonly method: TMethod;
  readonly params?: TParams | undefined;
  jsonrpc: '2.0';
}

export interface JsonRpcRequestParams<T extends AbstractRequestData> {
  readonly Data: T;
  readonly UUID: string;
}

export interface JsonRpcResponse<T extends AbstractResponseResult<any, string>> {
  readonly error?: undefined;
  readonly id?: string | undefined;
  readonly jsonrpc?: '2.0' | undefined;
  readonly result?: T | undefined;
}

export type RefundRequest = JsonRpcRequest<RefundRequestParams, 'Refund'>;
export interface RefundRequestData extends AbstractRequestData {
  readonly Amount: string;
  readonly OrderID: string;
  readonly [key: string]: any;
}

export type RefundRequestParams = JsonRpcRequestParams<RefundRequestData>;
export type RefundResponse = JsonRpcResponse<RefundResponseResult>;
export interface RefundResponseData {
  readonly orderid?: string | undefined;
  readonly result: string;
}

export type RefundResponseResult = AbstractResponseResult<RefundResponseData, 'Refund'>;
